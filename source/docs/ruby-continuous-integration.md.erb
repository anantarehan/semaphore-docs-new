---
layout: post
title: Ruby Continuous Integration
alias: docs/ruby.html
category: Languages
tags:
  - ruby
---

This document contains information related to projects based on the Ubuntu 14.04 image. 
If you are using the Ubuntu 18.04 image for your projects, please refer to [this page](https://semaphoreci.com/docs/ubuntu-1804.html). 

If you are using Ubuntu 14.04 image and you want to switch to Ubuntu 18.04 be sure to check our [upgrade guide](https://semaphoreci.com/docs/ubuntu-1804.html#how-to-upgrade).
___

You can set up continuous integration for Ruby projects on Semaphore in a snap.
The first time you add your project, Semaphore will analyze the code and propose
a set of working build commands to test it. In most cases no additional setup
is required from you to enjoy the full power of continuous integration.

Semaphore detects the version of Ruby and can generate a working
`database.yml` for various database engines. All Ruby projects on Semaphore are
using a private RubyGems mirror which makes installing gems faster than using
the public RubyGems.org repository. Project dependencies are automatically
cached and reused between builds.

<h4>Ruby essentials</h4>
<ul>
  <li><a href="/docs/languages/ruby/setting-up-ruby-project-on-semaphore.html">Setting up a Ruby project on Semaphore</a></li>
  <li><a href="/docs/languages/ruby/ruby-support-on-semaphore.html">Ruby support on Semaphore</a></li>
</ul>

<h4>Guides</h4>
<ul>
  <li><a href="/docs/setting-up-bdd-stack-on-new-rails-application.html">Setting up the BDD stack on a new Rails 4 application</a></li>
  <li><a href="/docs/languages/ruby/using-database-in-ruby-application.html">Using database from a Ruby or Rails application</a></li>
  <li><a href="https://semaphoreci.com/blog/2014/03/18/managing-externals-in-ruby-tests.html">Managing Externals in Ruby Tests</a></li>
  <li><a href="https://semaphoreci.com/blog/2013/06/28/testing-rails-apps-that-use-pusher.html">Testing Rails apps that use Pusher with pusher-fake</a></li>
  <li><a href="https://semaphoreci.com/blog/2013/11/14/how-to-use-different-gemfiles-with-bundler.html">How to use different Gemfiles with Bundler</a></li>
  <li><a href="https://semaphoreci.com/blog/2013/12/16/upgrade-your-paranoia-with-brakeman.html">Include Brakeman in your continuous integration pipeline</a></li>
  <li><a href="/docs/using-wkhtmltopdf.html">Using wkhtmltopdf</a></li>
  <li><a href="https://semaphoreci.com/blog/2014/02/11/rails-testing-antipatterns-controllers.html">Rails Testing Antipatterns: Controllers</a></li>
  <li><a href="https://semaphoreci.com/blog/2014/01/21/rails-testing-antipatterns-models.html">Rails Testing Antipatterns: Models</a></li>
  <li><a href="https://semaphoreci.com/blog/2014/01/14/rails-testing-antipatterns-fixtures-and-factories.html">Rails Testing Antipatterns: Fixtures and Factories</a></li>
  <li><a href="https://semaphoreci.com/blog/2013/11/26/capistrano-3-upgrade-guide.html">Capistrano 3 Upgrade Guide</a></li>
</ul>

<h4>Customizing CI setup for Ruby projects</h4>
<ul>
  <li><a href="/docs/building-project-with-private-gems.html">Building a project with private gems</a></li>
  <li><a href="/docs/languages/ruby/custom-database-yml.html">Creating custom database.yml</a></li>
  <li><a href="/docs/languages/ruby/branch-specific-database-adapters.html">Branch specific database adapters</a></li>
  <li><a href="/docs/languages/ruby/testing-with-solr.html">Testing Ruby/Rails applications that use Solr</a></li>
  <li><a href="/docs/running-cucumber-scenarios-in-threads.html">Running Cucumber scenarios in parallel</a></li>
  <li><a href="/docs/running-rspec-specs-in-threads.html">Running RSpec specs in parallel</a></li>
  <li><a href="/docs/running-minitest-tests-in-threads.html">Running Minitest tests in parallel</a></li>
  <li><a href="/docs/languages/ruby/switching-ruby-version-on-specific-branch.html">Switching Ruby version on a specific branch</a></li>
</ul>

<h4>Troubleshooting Ruby builds</h4>
<ul>
  <li><a href="/docs/general-troubleshooting.html">General build troubleshooting</a></li>
  <li><a href="/docs/failed-build-on-db-setup.html">Build fails on db:setup</a></li>
  <li><a href="/docs/fail-unknown-database.html">Fail: 'Unknown database 'xyz_test'' or 'FATAL database 'xyx_test' does not exist'</a></li>
  <li><a href="/docs/fail-could-not-parse-object.html">Fail: 'fatal Could not parse object' during bundle install</a></li>
  <li><a href="/docs/fail-file-not-found-db-create.html">Fail: 'file not found db:create (ArgumentError)'</a></li>
  <li><a href="/docs/fail-permission-denied-from-github.html">Fail: Permission denied from GitHub on bundle install</a></li>
  <li><a href="/docs/fail-sphinx-tests.html">Fail: Sphinx tests</a></li>
  <li><a href="/docs/issues-with-capybara-webkit.html">Iâ€™m having issues with capybara-webkit</a></li>
  <li><a href="/docs/pending-cucumber-scenarios.html">Pending Cucumber scenarios</a></li>
  <li><a href="/docs/class-require-fails.html">Requiring a class file fails</a></li>
  <li><a href="/docs/selenium-unable-to-obtain-connection.html">Selenium tests are unable to obtain connection to Firefox</a></li>
  <li><a href="/docs/fail-real-http-connections-are-disabled.html">Tests or setup fail with "Real HTTP connections are disabled."</a></li>
</ul>
